# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _a3sat_swig
else:
    import _a3sat_swig

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



def high_res_timer_now() -> "gr::high_res_timer_type":
    r"""high_res_timer_now() -> gr::high_res_timer_type"""
    return _a3sat_swig.high_res_timer_now()

def high_res_timer_now_perfmon() -> "gr::high_res_timer_type":
    r"""high_res_timer_now_perfmon() -> gr::high_res_timer_type"""
    return _a3sat_swig.high_res_timer_now_perfmon()

def high_res_timer_tps() -> "gr::high_res_timer_type":
    r"""high_res_timer_tps() -> gr::high_res_timer_type"""
    return _a3sat_swig.high_res_timer_tps()

def high_res_timer_epoch() -> "gr::high_res_timer_type":
    r"""high_res_timer_epoch() -> gr::high_res_timer_type"""
    return _a3sat_swig.high_res_timer_epoch()
class conv_enc(object):
    r"""
    Convolutional Encoder based on CCSDS 130.1-G-3.

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of a3sat::conv_enc.

    To avoid accidental use of raw pointers, a3sat::conv_enc's constructor is in a private implementation class. a3sat::conv_enc::make is the public interface for creating new instances.
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def make() -> "gr::a3sat::conv_enc::sptr":
        r"""
        make() -> conv_enc_sptr
        Convolutional Encoder based on CCSDS 130.1-G-3.

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of a3sat::conv_enc.

        To avoid accidental use of raw pointers, a3sat::conv_enc's constructor is in a private implementation class. a3sat::conv_enc::make is the public interface for creating new instances.
        """
        return _a3sat_swig.conv_enc_make()
    __swig_destroy__ = _a3sat_swig.delete_conv_enc

# Register conv_enc in _a3sat_swig:
_a3sat_swig.conv_enc_swigregister(conv_enc)

def conv_enc_make() -> "gr::a3sat::conv_enc::sptr":
    r"""
    conv_enc_make() -> conv_enc_sptr
    Convolutional Encoder based on CCSDS 130.1-G-3.

    Constructor Specific Documentation:

    Return a shared_ptr to a new instance of a3sat::conv_enc.

    To avoid accidental use of raw pointers, a3sat::conv_enc's constructor is in a private implementation class. a3sat::conv_enc::make is the public interface for creating new instances.
    """
    return _a3sat_swig.conv_enc_make()

class conv_enc_sptr(object):
    r"""Proxy of C++ boost::shared_ptr< gr::a3sat::conv_enc > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(conv_enc_sptr self) -> conv_enc_sptr
        __init__(conv_enc_sptr self, conv_enc p) -> conv_enc_sptr
        """
        _a3sat_swig.conv_enc_sptr_swiginit(self, _a3sat_swig.new_conv_enc_sptr(*args))

    def __deref__(self) -> "gr::a3sat::conv_enc *":
        r"""__deref__(conv_enc_sptr self) -> conv_enc"""
        return _a3sat_swig.conv_enc_sptr___deref__(self)
    __swig_destroy__ = _a3sat_swig.delete_conv_enc_sptr

    def make(self) -> "gr::a3sat::conv_enc::sptr":
        r"""
        make(conv_enc_sptr self) -> conv_enc_sptr
        Convolutional Encoder based on CCSDS 130.1-G-3.

        Constructor Specific Documentation:

        Return a shared_ptr to a new instance of a3sat::conv_enc.

        To avoid accidental use of raw pointers, a3sat::conv_enc's constructor is in a private implementation class. a3sat::conv_enc::make is the public interface for creating new instances.
        """
        return _a3sat_swig.conv_enc_sptr_make(self)

    def history(self) -> "unsigned int":
        r"""history(conv_enc_sptr self) -> unsigned int"""
        return _a3sat_swig.conv_enc_sptr_history(self)

    def declare_sample_delay(self, *args) -> "void":
        r"""
        declare_sample_delay(conv_enc_sptr self, int which, int delay)
        declare_sample_delay(conv_enc_sptr self, unsigned int delay)
        """
        return _a3sat_swig.conv_enc_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, which: "int") -> "unsigned int":
        r"""sample_delay(conv_enc_sptr self, int which) -> unsigned int"""
        return _a3sat_swig.conv_enc_sptr_sample_delay(self, which)

    def set_output_multiple(self, multiple: "int") -> "void":
        r"""set_output_multiple(conv_enc_sptr self, int multiple)"""
        return _a3sat_swig.conv_enc_sptr_set_output_multiple(self, multiple)

    def output_multiple(self) -> "int":
        r"""output_multiple(conv_enc_sptr self) -> int"""
        return _a3sat_swig.conv_enc_sptr_output_multiple(self)

    def relative_rate(self) -> "double":
        r"""relative_rate(conv_enc_sptr self) -> double"""
        return _a3sat_swig.conv_enc_sptr_relative_rate(self)

    def relative_rate_i(self) -> "uint64_t":
        r"""relative_rate_i(conv_enc_sptr self) -> uint64_t"""
        return _a3sat_swig.conv_enc_sptr_relative_rate_i(self)

    def relative_rate_d(self) -> "uint64_t":
        r"""relative_rate_d(conv_enc_sptr self) -> uint64_t"""
        return _a3sat_swig.conv_enc_sptr_relative_rate_d(self)

    def start(self) -> "bool":
        r"""start(conv_enc_sptr self) -> bool"""
        return _a3sat_swig.conv_enc_sptr_start(self)

    def stop(self) -> "bool":
        r"""stop(conv_enc_sptr self) -> bool"""
        return _a3sat_swig.conv_enc_sptr_stop(self)

    def nitems_read(self, which_input: "unsigned int") -> "uint64_t":
        r"""nitems_read(conv_enc_sptr self, unsigned int which_input) -> uint64_t"""
        return _a3sat_swig.conv_enc_sptr_nitems_read(self, which_input)

    def nitems_written(self, which_output: "unsigned int") -> "uint64_t":
        r"""nitems_written(conv_enc_sptr self, unsigned int which_output) -> uint64_t"""
        return _a3sat_swig.conv_enc_sptr_nitems_written(self, which_output)

    def set_log_level(self, level: "std::string") -> "void":
        r"""set_log_level(conv_enc_sptr self, std::string level)"""
        return _a3sat_swig.conv_enc_sptr_set_log_level(self, level)

    def log_level(self) -> "std::string":
        r"""log_level(conv_enc_sptr self) -> std::string"""
        return _a3sat_swig.conv_enc_sptr_log_level(self)

    def max_noutput_items(self) -> "int":
        r"""max_noutput_items(conv_enc_sptr self) -> int"""
        return _a3sat_swig.conv_enc_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, m: "int") -> "void":
        r"""set_max_noutput_items(conv_enc_sptr self, int m)"""
        return _a3sat_swig.conv_enc_sptr_set_max_noutput_items(self, m)

    def unset_max_noutput_items(self) -> "void":
        r"""unset_max_noutput_items(conv_enc_sptr self)"""
        return _a3sat_swig.conv_enc_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self) -> "bool":
        r"""is_set_max_noutput_items(conv_enc_sptr self) -> bool"""
        return _a3sat_swig.conv_enc_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, m: "int") -> "void":
        r"""set_min_noutput_items(conv_enc_sptr self, int m)"""
        return _a3sat_swig.conv_enc_sptr_set_min_noutput_items(self, m)

    def min_noutput_items(self) -> "int":
        r"""min_noutput_items(conv_enc_sptr self) -> int"""
        return _a3sat_swig.conv_enc_sptr_min_noutput_items(self)

    def max_output_buffer(self, i: "int") -> "long":
        r"""max_output_buffer(conv_enc_sptr self, int i) -> long"""
        return _a3sat_swig.conv_enc_sptr_max_output_buffer(self, i)

    def set_max_output_buffer(self, *args) -> "void":
        r"""
        set_max_output_buffer(conv_enc_sptr self, long max_output_buffer)
        set_max_output_buffer(conv_enc_sptr self, int port, long max_output_buffer)
        """
        return _a3sat_swig.conv_enc_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, i: "int") -> "long":
        r"""min_output_buffer(conv_enc_sptr self, int i) -> long"""
        return _a3sat_swig.conv_enc_sptr_min_output_buffer(self, i)

    def set_min_output_buffer(self, *args) -> "void":
        r"""
        set_min_output_buffer(conv_enc_sptr self, long min_output_buffer)
        set_min_output_buffer(conv_enc_sptr self, int port, long min_output_buffer)
        """
        return _a3sat_swig.conv_enc_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self) -> "float":
        r"""pc_noutput_items(conv_enc_sptr self) -> float"""
        return _a3sat_swig.conv_enc_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self) -> "float":
        r"""pc_noutput_items_avg(conv_enc_sptr self) -> float"""
        return _a3sat_swig.conv_enc_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self) -> "float":
        r"""pc_noutput_items_var(conv_enc_sptr self) -> float"""
        return _a3sat_swig.conv_enc_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self) -> "float":
        r"""pc_nproduced(conv_enc_sptr self) -> float"""
        return _a3sat_swig.conv_enc_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self) -> "float":
        r"""pc_nproduced_avg(conv_enc_sptr self) -> float"""
        return _a3sat_swig.conv_enc_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self) -> "float":
        r"""pc_nproduced_var(conv_enc_sptr self) -> float"""
        return _a3sat_swig.conv_enc_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full(conv_enc_sptr self, int which) -> float
        pc_input_buffers_full(conv_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.conv_enc_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full_avg(conv_enc_sptr self, int which) -> float
        pc_input_buffers_full_avg(conv_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.conv_enc_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full_var(conv_enc_sptr self, int which) -> float
        pc_input_buffers_full_var(conv_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.conv_enc_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full(conv_enc_sptr self, int which) -> float
        pc_output_buffers_full(conv_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.conv_enc_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full_avg(conv_enc_sptr self, int which) -> float
        pc_output_buffers_full_avg(conv_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.conv_enc_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full_var(conv_enc_sptr self, int which) -> float
        pc_output_buffers_full_var(conv_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.conv_enc_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self) -> "float":
        r"""pc_work_time(conv_enc_sptr self) -> float"""
        return _a3sat_swig.conv_enc_sptr_pc_work_time(self)

    def pc_work_time_avg(self) -> "float":
        r"""pc_work_time_avg(conv_enc_sptr self) -> float"""
        return _a3sat_swig.conv_enc_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self) -> "float":
        r"""pc_work_time_var(conv_enc_sptr self) -> float"""
        return _a3sat_swig.conv_enc_sptr_pc_work_time_var(self)

    def pc_work_time_total(self) -> "float":
        r"""pc_work_time_total(conv_enc_sptr self) -> float"""
        return _a3sat_swig.conv_enc_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self) -> "float":
        r"""pc_throughput_avg(conv_enc_sptr self) -> float"""
        return _a3sat_swig.conv_enc_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, mask: "std::vector< int,std::allocator< int > > const &") -> "void":
        r"""set_processor_affinity(conv_enc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _a3sat_swig.conv_enc_sptr_set_processor_affinity(self, mask)

    def unset_processor_affinity(self) -> "void":
        r"""unset_processor_affinity(conv_enc_sptr self)"""
        return _a3sat_swig.conv_enc_sptr_unset_processor_affinity(self)

    def processor_affinity(self) -> "std::vector< int,std::allocator< int > >":
        r"""processor_affinity(conv_enc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _a3sat_swig.conv_enc_sptr_processor_affinity(self)

    def active_thread_priority(self) -> "int":
        r"""active_thread_priority(conv_enc_sptr self) -> int"""
        return _a3sat_swig.conv_enc_sptr_active_thread_priority(self)

    def thread_priority(self) -> "int":
        r"""thread_priority(conv_enc_sptr self) -> int"""
        return _a3sat_swig.conv_enc_sptr_thread_priority(self)

    def set_thread_priority(self, priority: "int") -> "int":
        r"""set_thread_priority(conv_enc_sptr self, int priority) -> int"""
        return _a3sat_swig.conv_enc_sptr_set_thread_priority(self, priority)

    def name(self) -> "std::string":
        r"""name(conv_enc_sptr self) -> std::string"""
        return _a3sat_swig.conv_enc_sptr_name(self)

    def symbol_name(self) -> "std::string":
        r"""symbol_name(conv_enc_sptr self) -> std::string"""
        return _a3sat_swig.conv_enc_sptr_symbol_name(self)

    def input_signature(self) -> "gr::io_signature::sptr":
        r"""input_signature(conv_enc_sptr self) -> io_signature_sptr"""
        return _a3sat_swig.conv_enc_sptr_input_signature(self)

    def output_signature(self) -> "gr::io_signature::sptr":
        r"""output_signature(conv_enc_sptr self) -> io_signature_sptr"""
        return _a3sat_swig.conv_enc_sptr_output_signature(self)

    def unique_id(self) -> "long":
        r"""unique_id(conv_enc_sptr self) -> long"""
        return _a3sat_swig.conv_enc_sptr_unique_id(self)

    def to_basic_block(self) -> "gr::basic_block_sptr":
        r"""to_basic_block(conv_enc_sptr self) -> basic_block_sptr"""
        return _a3sat_swig.conv_enc_sptr_to_basic_block(self)

    def check_topology(self, ninputs: "int", noutputs: "int") -> "bool":
        r"""check_topology(conv_enc_sptr self, int ninputs, int noutputs) -> bool"""
        return _a3sat_swig.conv_enc_sptr_check_topology(self, ninputs, noutputs)

    def alias(self) -> "std::string":
        r"""alias(conv_enc_sptr self) -> std::string"""
        return _a3sat_swig.conv_enc_sptr_alias(self)

    def set_block_alias(self, name: "std::string") -> "void":
        r"""set_block_alias(conv_enc_sptr self, std::string name)"""
        return _a3sat_swig.conv_enc_sptr_set_block_alias(self, name)

    def _post(self, which_port: "swig_pmt_ptr", msg: "swig_pmt_ptr") -> "void":
        r"""_post(conv_enc_sptr self, swig_pmt_ptr which_port, swig_pmt_ptr msg)"""
        return _a3sat_swig.conv_enc_sptr__post(self, which_port, msg)

    def message_ports_in(self) -> "pmt::pmt_t":
        r"""message_ports_in(conv_enc_sptr self) -> swig_pmt_ptr"""
        return _a3sat_swig.conv_enc_sptr_message_ports_in(self)

    def message_ports_out(self) -> "pmt::pmt_t":
        r"""message_ports_out(conv_enc_sptr self) -> swig_pmt_ptr"""
        return _a3sat_swig.conv_enc_sptr_message_ports_out(self)

    def message_subscribers(self, which_port: "swig_pmt_ptr") -> "pmt::pmt_t":
        r"""message_subscribers(conv_enc_sptr self, swig_pmt_ptr which_port) -> swig_pmt_ptr"""
        return _a3sat_swig.conv_enc_sptr_message_subscribers(self, which_port)

# Register conv_enc_sptr in _a3sat_swig:
_a3sat_swig.conv_enc_sptr_swigregister(conv_enc_sptr)


conv_enc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
conv_enc = conv_enc.make;

class conv_dec(object):
    r"""
    Convolutional Decoder based on CCSDS 130.1-G-3.

    Constructor Specific Documentation:



    Args:
        soft_decision_decoding : 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def make(soft_decision_decoding: "bool") -> "gr::a3sat::conv_dec::sptr":
        r"""
        make(bool soft_decision_decoding) -> conv_dec_sptr
        Convolutional Decoder based on CCSDS 130.1-G-3.

        Constructor Specific Documentation:



        Args:
            soft_decision_decoding : 
        """
        return _a3sat_swig.conv_dec_make(soft_decision_decoding)
    __swig_destroy__ = _a3sat_swig.delete_conv_dec

# Register conv_dec in _a3sat_swig:
_a3sat_swig.conv_dec_swigregister(conv_dec)

def conv_dec_make(soft_decision_decoding: "bool") -> "gr::a3sat::conv_dec::sptr":
    r"""
    conv_dec_make(bool soft_decision_decoding) -> conv_dec_sptr
    Convolutional Decoder based on CCSDS 130.1-G-3.

    Constructor Specific Documentation:



    Args:
        soft_decision_decoding : 
    """
    return _a3sat_swig.conv_dec_make(soft_decision_decoding)

class conv_dec_sptr(object):
    r"""Proxy of C++ boost::shared_ptr< gr::a3sat::conv_dec > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(conv_dec_sptr self) -> conv_dec_sptr
        __init__(conv_dec_sptr self, conv_dec p) -> conv_dec_sptr
        """
        _a3sat_swig.conv_dec_sptr_swiginit(self, _a3sat_swig.new_conv_dec_sptr(*args))

    def __deref__(self) -> "gr::a3sat::conv_dec *":
        r"""__deref__(conv_dec_sptr self) -> conv_dec"""
        return _a3sat_swig.conv_dec_sptr___deref__(self)
    __swig_destroy__ = _a3sat_swig.delete_conv_dec_sptr

    def make(self, soft_decision_decoding: "bool") -> "gr::a3sat::conv_dec::sptr":
        r"""
        make(conv_dec_sptr self, bool soft_decision_decoding) -> conv_dec_sptr
        Convolutional Decoder based on CCSDS 130.1-G-3.

        Constructor Specific Documentation:



        Args:
            soft_decision_decoding : 
        """
        return _a3sat_swig.conv_dec_sptr_make(self, soft_decision_decoding)

    def history(self) -> "unsigned int":
        r"""history(conv_dec_sptr self) -> unsigned int"""
        return _a3sat_swig.conv_dec_sptr_history(self)

    def declare_sample_delay(self, *args) -> "void":
        r"""
        declare_sample_delay(conv_dec_sptr self, int which, int delay)
        declare_sample_delay(conv_dec_sptr self, unsigned int delay)
        """
        return _a3sat_swig.conv_dec_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, which: "int") -> "unsigned int":
        r"""sample_delay(conv_dec_sptr self, int which) -> unsigned int"""
        return _a3sat_swig.conv_dec_sptr_sample_delay(self, which)

    def set_output_multiple(self, multiple: "int") -> "void":
        r"""set_output_multiple(conv_dec_sptr self, int multiple)"""
        return _a3sat_swig.conv_dec_sptr_set_output_multiple(self, multiple)

    def output_multiple(self) -> "int":
        r"""output_multiple(conv_dec_sptr self) -> int"""
        return _a3sat_swig.conv_dec_sptr_output_multiple(self)

    def relative_rate(self) -> "double":
        r"""relative_rate(conv_dec_sptr self) -> double"""
        return _a3sat_swig.conv_dec_sptr_relative_rate(self)

    def relative_rate_i(self) -> "uint64_t":
        r"""relative_rate_i(conv_dec_sptr self) -> uint64_t"""
        return _a3sat_swig.conv_dec_sptr_relative_rate_i(self)

    def relative_rate_d(self) -> "uint64_t":
        r"""relative_rate_d(conv_dec_sptr self) -> uint64_t"""
        return _a3sat_swig.conv_dec_sptr_relative_rate_d(self)

    def start(self) -> "bool":
        r"""start(conv_dec_sptr self) -> bool"""
        return _a3sat_swig.conv_dec_sptr_start(self)

    def stop(self) -> "bool":
        r"""stop(conv_dec_sptr self) -> bool"""
        return _a3sat_swig.conv_dec_sptr_stop(self)

    def nitems_read(self, which_input: "unsigned int") -> "uint64_t":
        r"""nitems_read(conv_dec_sptr self, unsigned int which_input) -> uint64_t"""
        return _a3sat_swig.conv_dec_sptr_nitems_read(self, which_input)

    def nitems_written(self, which_output: "unsigned int") -> "uint64_t":
        r"""nitems_written(conv_dec_sptr self, unsigned int which_output) -> uint64_t"""
        return _a3sat_swig.conv_dec_sptr_nitems_written(self, which_output)

    def set_log_level(self, level: "std::string") -> "void":
        r"""set_log_level(conv_dec_sptr self, std::string level)"""
        return _a3sat_swig.conv_dec_sptr_set_log_level(self, level)

    def log_level(self) -> "std::string":
        r"""log_level(conv_dec_sptr self) -> std::string"""
        return _a3sat_swig.conv_dec_sptr_log_level(self)

    def max_noutput_items(self) -> "int":
        r"""max_noutput_items(conv_dec_sptr self) -> int"""
        return _a3sat_swig.conv_dec_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, m: "int") -> "void":
        r"""set_max_noutput_items(conv_dec_sptr self, int m)"""
        return _a3sat_swig.conv_dec_sptr_set_max_noutput_items(self, m)

    def unset_max_noutput_items(self) -> "void":
        r"""unset_max_noutput_items(conv_dec_sptr self)"""
        return _a3sat_swig.conv_dec_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self) -> "bool":
        r"""is_set_max_noutput_items(conv_dec_sptr self) -> bool"""
        return _a3sat_swig.conv_dec_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, m: "int") -> "void":
        r"""set_min_noutput_items(conv_dec_sptr self, int m)"""
        return _a3sat_swig.conv_dec_sptr_set_min_noutput_items(self, m)

    def min_noutput_items(self) -> "int":
        r"""min_noutput_items(conv_dec_sptr self) -> int"""
        return _a3sat_swig.conv_dec_sptr_min_noutput_items(self)

    def max_output_buffer(self, i: "int") -> "long":
        r"""max_output_buffer(conv_dec_sptr self, int i) -> long"""
        return _a3sat_swig.conv_dec_sptr_max_output_buffer(self, i)

    def set_max_output_buffer(self, *args) -> "void":
        r"""
        set_max_output_buffer(conv_dec_sptr self, long max_output_buffer)
        set_max_output_buffer(conv_dec_sptr self, int port, long max_output_buffer)
        """
        return _a3sat_swig.conv_dec_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, i: "int") -> "long":
        r"""min_output_buffer(conv_dec_sptr self, int i) -> long"""
        return _a3sat_swig.conv_dec_sptr_min_output_buffer(self, i)

    def set_min_output_buffer(self, *args) -> "void":
        r"""
        set_min_output_buffer(conv_dec_sptr self, long min_output_buffer)
        set_min_output_buffer(conv_dec_sptr self, int port, long min_output_buffer)
        """
        return _a3sat_swig.conv_dec_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self) -> "float":
        r"""pc_noutput_items(conv_dec_sptr self) -> float"""
        return _a3sat_swig.conv_dec_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self) -> "float":
        r"""pc_noutput_items_avg(conv_dec_sptr self) -> float"""
        return _a3sat_swig.conv_dec_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self) -> "float":
        r"""pc_noutput_items_var(conv_dec_sptr self) -> float"""
        return _a3sat_swig.conv_dec_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self) -> "float":
        r"""pc_nproduced(conv_dec_sptr self) -> float"""
        return _a3sat_swig.conv_dec_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self) -> "float":
        r"""pc_nproduced_avg(conv_dec_sptr self) -> float"""
        return _a3sat_swig.conv_dec_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self) -> "float":
        r"""pc_nproduced_var(conv_dec_sptr self) -> float"""
        return _a3sat_swig.conv_dec_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full(conv_dec_sptr self, int which) -> float
        pc_input_buffers_full(conv_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.conv_dec_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full_avg(conv_dec_sptr self, int which) -> float
        pc_input_buffers_full_avg(conv_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.conv_dec_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full_var(conv_dec_sptr self, int which) -> float
        pc_input_buffers_full_var(conv_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.conv_dec_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full(conv_dec_sptr self, int which) -> float
        pc_output_buffers_full(conv_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.conv_dec_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full_avg(conv_dec_sptr self, int which) -> float
        pc_output_buffers_full_avg(conv_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.conv_dec_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full_var(conv_dec_sptr self, int which) -> float
        pc_output_buffers_full_var(conv_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.conv_dec_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self) -> "float":
        r"""pc_work_time(conv_dec_sptr self) -> float"""
        return _a3sat_swig.conv_dec_sptr_pc_work_time(self)

    def pc_work_time_avg(self) -> "float":
        r"""pc_work_time_avg(conv_dec_sptr self) -> float"""
        return _a3sat_swig.conv_dec_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self) -> "float":
        r"""pc_work_time_var(conv_dec_sptr self) -> float"""
        return _a3sat_swig.conv_dec_sptr_pc_work_time_var(self)

    def pc_work_time_total(self) -> "float":
        r"""pc_work_time_total(conv_dec_sptr self) -> float"""
        return _a3sat_swig.conv_dec_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self) -> "float":
        r"""pc_throughput_avg(conv_dec_sptr self) -> float"""
        return _a3sat_swig.conv_dec_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, mask: "std::vector< int,std::allocator< int > > const &") -> "void":
        r"""set_processor_affinity(conv_dec_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _a3sat_swig.conv_dec_sptr_set_processor_affinity(self, mask)

    def unset_processor_affinity(self) -> "void":
        r"""unset_processor_affinity(conv_dec_sptr self)"""
        return _a3sat_swig.conv_dec_sptr_unset_processor_affinity(self)

    def processor_affinity(self) -> "std::vector< int,std::allocator< int > >":
        r"""processor_affinity(conv_dec_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _a3sat_swig.conv_dec_sptr_processor_affinity(self)

    def active_thread_priority(self) -> "int":
        r"""active_thread_priority(conv_dec_sptr self) -> int"""
        return _a3sat_swig.conv_dec_sptr_active_thread_priority(self)

    def thread_priority(self) -> "int":
        r"""thread_priority(conv_dec_sptr self) -> int"""
        return _a3sat_swig.conv_dec_sptr_thread_priority(self)

    def set_thread_priority(self, priority: "int") -> "int":
        r"""set_thread_priority(conv_dec_sptr self, int priority) -> int"""
        return _a3sat_swig.conv_dec_sptr_set_thread_priority(self, priority)

    def name(self) -> "std::string":
        r"""name(conv_dec_sptr self) -> std::string"""
        return _a3sat_swig.conv_dec_sptr_name(self)

    def symbol_name(self) -> "std::string":
        r"""symbol_name(conv_dec_sptr self) -> std::string"""
        return _a3sat_swig.conv_dec_sptr_symbol_name(self)

    def input_signature(self) -> "gr::io_signature::sptr":
        r"""input_signature(conv_dec_sptr self) -> io_signature_sptr"""
        return _a3sat_swig.conv_dec_sptr_input_signature(self)

    def output_signature(self) -> "gr::io_signature::sptr":
        r"""output_signature(conv_dec_sptr self) -> io_signature_sptr"""
        return _a3sat_swig.conv_dec_sptr_output_signature(self)

    def unique_id(self) -> "long":
        r"""unique_id(conv_dec_sptr self) -> long"""
        return _a3sat_swig.conv_dec_sptr_unique_id(self)

    def to_basic_block(self) -> "gr::basic_block_sptr":
        r"""to_basic_block(conv_dec_sptr self) -> basic_block_sptr"""
        return _a3sat_swig.conv_dec_sptr_to_basic_block(self)

    def check_topology(self, ninputs: "int", noutputs: "int") -> "bool":
        r"""check_topology(conv_dec_sptr self, int ninputs, int noutputs) -> bool"""
        return _a3sat_swig.conv_dec_sptr_check_topology(self, ninputs, noutputs)

    def alias(self) -> "std::string":
        r"""alias(conv_dec_sptr self) -> std::string"""
        return _a3sat_swig.conv_dec_sptr_alias(self)

    def set_block_alias(self, name: "std::string") -> "void":
        r"""set_block_alias(conv_dec_sptr self, std::string name)"""
        return _a3sat_swig.conv_dec_sptr_set_block_alias(self, name)

    def _post(self, which_port: "swig_pmt_ptr", msg: "swig_pmt_ptr") -> "void":
        r"""_post(conv_dec_sptr self, swig_pmt_ptr which_port, swig_pmt_ptr msg)"""
        return _a3sat_swig.conv_dec_sptr__post(self, which_port, msg)

    def message_ports_in(self) -> "pmt::pmt_t":
        r"""message_ports_in(conv_dec_sptr self) -> swig_pmt_ptr"""
        return _a3sat_swig.conv_dec_sptr_message_ports_in(self)

    def message_ports_out(self) -> "pmt::pmt_t":
        r"""message_ports_out(conv_dec_sptr self) -> swig_pmt_ptr"""
        return _a3sat_swig.conv_dec_sptr_message_ports_out(self)

    def message_subscribers(self, which_port: "swig_pmt_ptr") -> "pmt::pmt_t":
        r"""message_subscribers(conv_dec_sptr self, swig_pmt_ptr which_port) -> swig_pmt_ptr"""
        return _a3sat_swig.conv_dec_sptr_message_subscribers(self, which_port)

# Register conv_dec_sptr in _a3sat_swig:
_a3sat_swig.conv_dec_sptr_swigregister(conv_dec_sptr)


conv_dec_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
conv_dec = conv_dec.make;

class ldpc_enc(object):
    r"""
    LDPC Encoder based on CCSDS 130.1-G-3.

    Constructor Specific Documentation:


    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def make() -> "gr::a3sat::ldpc_enc::sptr":
        r"""
        make() -> ldpc_enc_sptr
        LDPC Encoder based on CCSDS 130.1-G-3.

        Constructor Specific Documentation:


        """
        return _a3sat_swig.ldpc_enc_make()
    __swig_destroy__ = _a3sat_swig.delete_ldpc_enc

# Register ldpc_enc in _a3sat_swig:
_a3sat_swig.ldpc_enc_swigregister(ldpc_enc)

def ldpc_enc_make() -> "gr::a3sat::ldpc_enc::sptr":
    r"""
    ldpc_enc_make() -> ldpc_enc_sptr
    LDPC Encoder based on CCSDS 130.1-G-3.

    Constructor Specific Documentation:


    """
    return _a3sat_swig.ldpc_enc_make()

class ldpc_enc_sptr(object):
    r"""Proxy of C++ boost::shared_ptr< gr::a3sat::ldpc_enc > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(ldpc_enc_sptr self) -> ldpc_enc_sptr
        __init__(ldpc_enc_sptr self, ldpc_enc p) -> ldpc_enc_sptr
        """
        _a3sat_swig.ldpc_enc_sptr_swiginit(self, _a3sat_swig.new_ldpc_enc_sptr(*args))

    def __deref__(self) -> "gr::a3sat::ldpc_enc *":
        r"""__deref__(ldpc_enc_sptr self) -> ldpc_enc"""
        return _a3sat_swig.ldpc_enc_sptr___deref__(self)
    __swig_destroy__ = _a3sat_swig.delete_ldpc_enc_sptr

    def make(self) -> "gr::a3sat::ldpc_enc::sptr":
        r"""
        make(ldpc_enc_sptr self) -> ldpc_enc_sptr
        LDPC Encoder based on CCSDS 130.1-G-3.

        Constructor Specific Documentation:


        """
        return _a3sat_swig.ldpc_enc_sptr_make(self)

    def history(self) -> "unsigned int":
        r"""history(ldpc_enc_sptr self) -> unsigned int"""
        return _a3sat_swig.ldpc_enc_sptr_history(self)

    def declare_sample_delay(self, *args) -> "void":
        r"""
        declare_sample_delay(ldpc_enc_sptr self, int which, int delay)
        declare_sample_delay(ldpc_enc_sptr self, unsigned int delay)
        """
        return _a3sat_swig.ldpc_enc_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, which: "int") -> "unsigned int":
        r"""sample_delay(ldpc_enc_sptr self, int which) -> unsigned int"""
        return _a3sat_swig.ldpc_enc_sptr_sample_delay(self, which)

    def set_output_multiple(self, multiple: "int") -> "void":
        r"""set_output_multiple(ldpc_enc_sptr self, int multiple)"""
        return _a3sat_swig.ldpc_enc_sptr_set_output_multiple(self, multiple)

    def output_multiple(self) -> "int":
        r"""output_multiple(ldpc_enc_sptr self) -> int"""
        return _a3sat_swig.ldpc_enc_sptr_output_multiple(self)

    def relative_rate(self) -> "double":
        r"""relative_rate(ldpc_enc_sptr self) -> double"""
        return _a3sat_swig.ldpc_enc_sptr_relative_rate(self)

    def relative_rate_i(self) -> "uint64_t":
        r"""relative_rate_i(ldpc_enc_sptr self) -> uint64_t"""
        return _a3sat_swig.ldpc_enc_sptr_relative_rate_i(self)

    def relative_rate_d(self) -> "uint64_t":
        r"""relative_rate_d(ldpc_enc_sptr self) -> uint64_t"""
        return _a3sat_swig.ldpc_enc_sptr_relative_rate_d(self)

    def start(self) -> "bool":
        r"""start(ldpc_enc_sptr self) -> bool"""
        return _a3sat_swig.ldpc_enc_sptr_start(self)

    def stop(self) -> "bool":
        r"""stop(ldpc_enc_sptr self) -> bool"""
        return _a3sat_swig.ldpc_enc_sptr_stop(self)

    def nitems_read(self, which_input: "unsigned int") -> "uint64_t":
        r"""nitems_read(ldpc_enc_sptr self, unsigned int which_input) -> uint64_t"""
        return _a3sat_swig.ldpc_enc_sptr_nitems_read(self, which_input)

    def nitems_written(self, which_output: "unsigned int") -> "uint64_t":
        r"""nitems_written(ldpc_enc_sptr self, unsigned int which_output) -> uint64_t"""
        return _a3sat_swig.ldpc_enc_sptr_nitems_written(self, which_output)

    def set_log_level(self, level: "std::string") -> "void":
        r"""set_log_level(ldpc_enc_sptr self, std::string level)"""
        return _a3sat_swig.ldpc_enc_sptr_set_log_level(self, level)

    def log_level(self) -> "std::string":
        r"""log_level(ldpc_enc_sptr self) -> std::string"""
        return _a3sat_swig.ldpc_enc_sptr_log_level(self)

    def max_noutput_items(self) -> "int":
        r"""max_noutput_items(ldpc_enc_sptr self) -> int"""
        return _a3sat_swig.ldpc_enc_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, m: "int") -> "void":
        r"""set_max_noutput_items(ldpc_enc_sptr self, int m)"""
        return _a3sat_swig.ldpc_enc_sptr_set_max_noutput_items(self, m)

    def unset_max_noutput_items(self) -> "void":
        r"""unset_max_noutput_items(ldpc_enc_sptr self)"""
        return _a3sat_swig.ldpc_enc_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self) -> "bool":
        r"""is_set_max_noutput_items(ldpc_enc_sptr self) -> bool"""
        return _a3sat_swig.ldpc_enc_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, m: "int") -> "void":
        r"""set_min_noutput_items(ldpc_enc_sptr self, int m)"""
        return _a3sat_swig.ldpc_enc_sptr_set_min_noutput_items(self, m)

    def min_noutput_items(self) -> "int":
        r"""min_noutput_items(ldpc_enc_sptr self) -> int"""
        return _a3sat_swig.ldpc_enc_sptr_min_noutput_items(self)

    def max_output_buffer(self, i: "int") -> "long":
        r"""max_output_buffer(ldpc_enc_sptr self, int i) -> long"""
        return _a3sat_swig.ldpc_enc_sptr_max_output_buffer(self, i)

    def set_max_output_buffer(self, *args) -> "void":
        r"""
        set_max_output_buffer(ldpc_enc_sptr self, long max_output_buffer)
        set_max_output_buffer(ldpc_enc_sptr self, int port, long max_output_buffer)
        """
        return _a3sat_swig.ldpc_enc_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, i: "int") -> "long":
        r"""min_output_buffer(ldpc_enc_sptr self, int i) -> long"""
        return _a3sat_swig.ldpc_enc_sptr_min_output_buffer(self, i)

    def set_min_output_buffer(self, *args) -> "void":
        r"""
        set_min_output_buffer(ldpc_enc_sptr self, long min_output_buffer)
        set_min_output_buffer(ldpc_enc_sptr self, int port, long min_output_buffer)
        """
        return _a3sat_swig.ldpc_enc_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self) -> "float":
        r"""pc_noutput_items(ldpc_enc_sptr self) -> float"""
        return _a3sat_swig.ldpc_enc_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self) -> "float":
        r"""pc_noutput_items_avg(ldpc_enc_sptr self) -> float"""
        return _a3sat_swig.ldpc_enc_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self) -> "float":
        r"""pc_noutput_items_var(ldpc_enc_sptr self) -> float"""
        return _a3sat_swig.ldpc_enc_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self) -> "float":
        r"""pc_nproduced(ldpc_enc_sptr self) -> float"""
        return _a3sat_swig.ldpc_enc_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self) -> "float":
        r"""pc_nproduced_avg(ldpc_enc_sptr self) -> float"""
        return _a3sat_swig.ldpc_enc_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self) -> "float":
        r"""pc_nproduced_var(ldpc_enc_sptr self) -> float"""
        return _a3sat_swig.ldpc_enc_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full(ldpc_enc_sptr self, int which) -> float
        pc_input_buffers_full(ldpc_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.ldpc_enc_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full_avg(ldpc_enc_sptr self, int which) -> float
        pc_input_buffers_full_avg(ldpc_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.ldpc_enc_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full_var(ldpc_enc_sptr self, int which) -> float
        pc_input_buffers_full_var(ldpc_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.ldpc_enc_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full(ldpc_enc_sptr self, int which) -> float
        pc_output_buffers_full(ldpc_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.ldpc_enc_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full_avg(ldpc_enc_sptr self, int which) -> float
        pc_output_buffers_full_avg(ldpc_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.ldpc_enc_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full_var(ldpc_enc_sptr self, int which) -> float
        pc_output_buffers_full_var(ldpc_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.ldpc_enc_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self) -> "float":
        r"""pc_work_time(ldpc_enc_sptr self) -> float"""
        return _a3sat_swig.ldpc_enc_sptr_pc_work_time(self)

    def pc_work_time_avg(self) -> "float":
        r"""pc_work_time_avg(ldpc_enc_sptr self) -> float"""
        return _a3sat_swig.ldpc_enc_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self) -> "float":
        r"""pc_work_time_var(ldpc_enc_sptr self) -> float"""
        return _a3sat_swig.ldpc_enc_sptr_pc_work_time_var(self)

    def pc_work_time_total(self) -> "float":
        r"""pc_work_time_total(ldpc_enc_sptr self) -> float"""
        return _a3sat_swig.ldpc_enc_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self) -> "float":
        r"""pc_throughput_avg(ldpc_enc_sptr self) -> float"""
        return _a3sat_swig.ldpc_enc_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, mask: "std::vector< int,std::allocator< int > > const &") -> "void":
        r"""set_processor_affinity(ldpc_enc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _a3sat_swig.ldpc_enc_sptr_set_processor_affinity(self, mask)

    def unset_processor_affinity(self) -> "void":
        r"""unset_processor_affinity(ldpc_enc_sptr self)"""
        return _a3sat_swig.ldpc_enc_sptr_unset_processor_affinity(self)

    def processor_affinity(self) -> "std::vector< int,std::allocator< int > >":
        r"""processor_affinity(ldpc_enc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _a3sat_swig.ldpc_enc_sptr_processor_affinity(self)

    def active_thread_priority(self) -> "int":
        r"""active_thread_priority(ldpc_enc_sptr self) -> int"""
        return _a3sat_swig.ldpc_enc_sptr_active_thread_priority(self)

    def thread_priority(self) -> "int":
        r"""thread_priority(ldpc_enc_sptr self) -> int"""
        return _a3sat_swig.ldpc_enc_sptr_thread_priority(self)

    def set_thread_priority(self, priority: "int") -> "int":
        r"""set_thread_priority(ldpc_enc_sptr self, int priority) -> int"""
        return _a3sat_swig.ldpc_enc_sptr_set_thread_priority(self, priority)

    def name(self) -> "std::string":
        r"""name(ldpc_enc_sptr self) -> std::string"""
        return _a3sat_swig.ldpc_enc_sptr_name(self)

    def symbol_name(self) -> "std::string":
        r"""symbol_name(ldpc_enc_sptr self) -> std::string"""
        return _a3sat_swig.ldpc_enc_sptr_symbol_name(self)

    def input_signature(self) -> "gr::io_signature::sptr":
        r"""input_signature(ldpc_enc_sptr self) -> io_signature_sptr"""
        return _a3sat_swig.ldpc_enc_sptr_input_signature(self)

    def output_signature(self) -> "gr::io_signature::sptr":
        r"""output_signature(ldpc_enc_sptr self) -> io_signature_sptr"""
        return _a3sat_swig.ldpc_enc_sptr_output_signature(self)

    def unique_id(self) -> "long":
        r"""unique_id(ldpc_enc_sptr self) -> long"""
        return _a3sat_swig.ldpc_enc_sptr_unique_id(self)

    def to_basic_block(self) -> "gr::basic_block_sptr":
        r"""to_basic_block(ldpc_enc_sptr self) -> basic_block_sptr"""
        return _a3sat_swig.ldpc_enc_sptr_to_basic_block(self)

    def check_topology(self, ninputs: "int", noutputs: "int") -> "bool":
        r"""check_topology(ldpc_enc_sptr self, int ninputs, int noutputs) -> bool"""
        return _a3sat_swig.ldpc_enc_sptr_check_topology(self, ninputs, noutputs)

    def alias(self) -> "std::string":
        r"""alias(ldpc_enc_sptr self) -> std::string"""
        return _a3sat_swig.ldpc_enc_sptr_alias(self)

    def set_block_alias(self, name: "std::string") -> "void":
        r"""set_block_alias(ldpc_enc_sptr self, std::string name)"""
        return _a3sat_swig.ldpc_enc_sptr_set_block_alias(self, name)

    def _post(self, which_port: "swig_pmt_ptr", msg: "swig_pmt_ptr") -> "void":
        r"""_post(ldpc_enc_sptr self, swig_pmt_ptr which_port, swig_pmt_ptr msg)"""
        return _a3sat_swig.ldpc_enc_sptr__post(self, which_port, msg)

    def message_ports_in(self) -> "pmt::pmt_t":
        r"""message_ports_in(ldpc_enc_sptr self) -> swig_pmt_ptr"""
        return _a3sat_swig.ldpc_enc_sptr_message_ports_in(self)

    def message_ports_out(self) -> "pmt::pmt_t":
        r"""message_ports_out(ldpc_enc_sptr self) -> swig_pmt_ptr"""
        return _a3sat_swig.ldpc_enc_sptr_message_ports_out(self)

    def message_subscribers(self, which_port: "swig_pmt_ptr") -> "pmt::pmt_t":
        r"""message_subscribers(ldpc_enc_sptr self, swig_pmt_ptr which_port) -> swig_pmt_ptr"""
        return _a3sat_swig.ldpc_enc_sptr_message_subscribers(self, which_port)

# Register ldpc_enc_sptr in _a3sat_swig:
_a3sat_swig.ldpc_enc_sptr_swigregister(ldpc_enc_sptr)


ldpc_enc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ldpc_enc = ldpc_enc.make;

class ldpc_dec(object):
    r"""
    LDPC Decoder based on CCSDS 130.1-G-3.

    Constructor Specific Documentation:


    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def make() -> "gr::a3sat::ldpc_dec::sptr":
        r"""
        make() -> ldpc_dec_sptr
        LDPC Decoder based on CCSDS 130.1-G-3.

        Constructor Specific Documentation:


        """
        return _a3sat_swig.ldpc_dec_make()
    __swig_destroy__ = _a3sat_swig.delete_ldpc_dec

# Register ldpc_dec in _a3sat_swig:
_a3sat_swig.ldpc_dec_swigregister(ldpc_dec)

def ldpc_dec_make() -> "gr::a3sat::ldpc_dec::sptr":
    r"""
    ldpc_dec_make() -> ldpc_dec_sptr
    LDPC Decoder based on CCSDS 130.1-G-3.

    Constructor Specific Documentation:


    """
    return _a3sat_swig.ldpc_dec_make()

class ldpc_dec_sptr(object):
    r"""Proxy of C++ boost::shared_ptr< gr::a3sat::ldpc_dec > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(ldpc_dec_sptr self) -> ldpc_dec_sptr
        __init__(ldpc_dec_sptr self, ldpc_dec p) -> ldpc_dec_sptr
        """
        _a3sat_swig.ldpc_dec_sptr_swiginit(self, _a3sat_swig.new_ldpc_dec_sptr(*args))

    def __deref__(self) -> "gr::a3sat::ldpc_dec *":
        r"""__deref__(ldpc_dec_sptr self) -> ldpc_dec"""
        return _a3sat_swig.ldpc_dec_sptr___deref__(self)
    __swig_destroy__ = _a3sat_swig.delete_ldpc_dec_sptr

    def make(self) -> "gr::a3sat::ldpc_dec::sptr":
        r"""
        make(ldpc_dec_sptr self) -> ldpc_dec_sptr
        LDPC Decoder based on CCSDS 130.1-G-3.

        Constructor Specific Documentation:


        """
        return _a3sat_swig.ldpc_dec_sptr_make(self)

    def history(self) -> "unsigned int":
        r"""history(ldpc_dec_sptr self) -> unsigned int"""
        return _a3sat_swig.ldpc_dec_sptr_history(self)

    def declare_sample_delay(self, *args) -> "void":
        r"""
        declare_sample_delay(ldpc_dec_sptr self, int which, int delay)
        declare_sample_delay(ldpc_dec_sptr self, unsigned int delay)
        """
        return _a3sat_swig.ldpc_dec_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, which: "int") -> "unsigned int":
        r"""sample_delay(ldpc_dec_sptr self, int which) -> unsigned int"""
        return _a3sat_swig.ldpc_dec_sptr_sample_delay(self, which)

    def set_output_multiple(self, multiple: "int") -> "void":
        r"""set_output_multiple(ldpc_dec_sptr self, int multiple)"""
        return _a3sat_swig.ldpc_dec_sptr_set_output_multiple(self, multiple)

    def output_multiple(self) -> "int":
        r"""output_multiple(ldpc_dec_sptr self) -> int"""
        return _a3sat_swig.ldpc_dec_sptr_output_multiple(self)

    def relative_rate(self) -> "double":
        r"""relative_rate(ldpc_dec_sptr self) -> double"""
        return _a3sat_swig.ldpc_dec_sptr_relative_rate(self)

    def relative_rate_i(self) -> "uint64_t":
        r"""relative_rate_i(ldpc_dec_sptr self) -> uint64_t"""
        return _a3sat_swig.ldpc_dec_sptr_relative_rate_i(self)

    def relative_rate_d(self) -> "uint64_t":
        r"""relative_rate_d(ldpc_dec_sptr self) -> uint64_t"""
        return _a3sat_swig.ldpc_dec_sptr_relative_rate_d(self)

    def start(self) -> "bool":
        r"""start(ldpc_dec_sptr self) -> bool"""
        return _a3sat_swig.ldpc_dec_sptr_start(self)

    def stop(self) -> "bool":
        r"""stop(ldpc_dec_sptr self) -> bool"""
        return _a3sat_swig.ldpc_dec_sptr_stop(self)

    def nitems_read(self, which_input: "unsigned int") -> "uint64_t":
        r"""nitems_read(ldpc_dec_sptr self, unsigned int which_input) -> uint64_t"""
        return _a3sat_swig.ldpc_dec_sptr_nitems_read(self, which_input)

    def nitems_written(self, which_output: "unsigned int") -> "uint64_t":
        r"""nitems_written(ldpc_dec_sptr self, unsigned int which_output) -> uint64_t"""
        return _a3sat_swig.ldpc_dec_sptr_nitems_written(self, which_output)

    def set_log_level(self, level: "std::string") -> "void":
        r"""set_log_level(ldpc_dec_sptr self, std::string level)"""
        return _a3sat_swig.ldpc_dec_sptr_set_log_level(self, level)

    def log_level(self) -> "std::string":
        r"""log_level(ldpc_dec_sptr self) -> std::string"""
        return _a3sat_swig.ldpc_dec_sptr_log_level(self)

    def max_noutput_items(self) -> "int":
        r"""max_noutput_items(ldpc_dec_sptr self) -> int"""
        return _a3sat_swig.ldpc_dec_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, m: "int") -> "void":
        r"""set_max_noutput_items(ldpc_dec_sptr self, int m)"""
        return _a3sat_swig.ldpc_dec_sptr_set_max_noutput_items(self, m)

    def unset_max_noutput_items(self) -> "void":
        r"""unset_max_noutput_items(ldpc_dec_sptr self)"""
        return _a3sat_swig.ldpc_dec_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self) -> "bool":
        r"""is_set_max_noutput_items(ldpc_dec_sptr self) -> bool"""
        return _a3sat_swig.ldpc_dec_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, m: "int") -> "void":
        r"""set_min_noutput_items(ldpc_dec_sptr self, int m)"""
        return _a3sat_swig.ldpc_dec_sptr_set_min_noutput_items(self, m)

    def min_noutput_items(self) -> "int":
        r"""min_noutput_items(ldpc_dec_sptr self) -> int"""
        return _a3sat_swig.ldpc_dec_sptr_min_noutput_items(self)

    def max_output_buffer(self, i: "int") -> "long":
        r"""max_output_buffer(ldpc_dec_sptr self, int i) -> long"""
        return _a3sat_swig.ldpc_dec_sptr_max_output_buffer(self, i)

    def set_max_output_buffer(self, *args) -> "void":
        r"""
        set_max_output_buffer(ldpc_dec_sptr self, long max_output_buffer)
        set_max_output_buffer(ldpc_dec_sptr self, int port, long max_output_buffer)
        """
        return _a3sat_swig.ldpc_dec_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, i: "int") -> "long":
        r"""min_output_buffer(ldpc_dec_sptr self, int i) -> long"""
        return _a3sat_swig.ldpc_dec_sptr_min_output_buffer(self, i)

    def set_min_output_buffer(self, *args) -> "void":
        r"""
        set_min_output_buffer(ldpc_dec_sptr self, long min_output_buffer)
        set_min_output_buffer(ldpc_dec_sptr self, int port, long min_output_buffer)
        """
        return _a3sat_swig.ldpc_dec_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self) -> "float":
        r"""pc_noutput_items(ldpc_dec_sptr self) -> float"""
        return _a3sat_swig.ldpc_dec_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self) -> "float":
        r"""pc_noutput_items_avg(ldpc_dec_sptr self) -> float"""
        return _a3sat_swig.ldpc_dec_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self) -> "float":
        r"""pc_noutput_items_var(ldpc_dec_sptr self) -> float"""
        return _a3sat_swig.ldpc_dec_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self) -> "float":
        r"""pc_nproduced(ldpc_dec_sptr self) -> float"""
        return _a3sat_swig.ldpc_dec_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self) -> "float":
        r"""pc_nproduced_avg(ldpc_dec_sptr self) -> float"""
        return _a3sat_swig.ldpc_dec_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self) -> "float":
        r"""pc_nproduced_var(ldpc_dec_sptr self) -> float"""
        return _a3sat_swig.ldpc_dec_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full(ldpc_dec_sptr self, int which) -> float
        pc_input_buffers_full(ldpc_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.ldpc_dec_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full_avg(ldpc_dec_sptr self, int which) -> float
        pc_input_buffers_full_avg(ldpc_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.ldpc_dec_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full_var(ldpc_dec_sptr self, int which) -> float
        pc_input_buffers_full_var(ldpc_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.ldpc_dec_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full(ldpc_dec_sptr self, int which) -> float
        pc_output_buffers_full(ldpc_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.ldpc_dec_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full_avg(ldpc_dec_sptr self, int which) -> float
        pc_output_buffers_full_avg(ldpc_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.ldpc_dec_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full_var(ldpc_dec_sptr self, int which) -> float
        pc_output_buffers_full_var(ldpc_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.ldpc_dec_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self) -> "float":
        r"""pc_work_time(ldpc_dec_sptr self) -> float"""
        return _a3sat_swig.ldpc_dec_sptr_pc_work_time(self)

    def pc_work_time_avg(self) -> "float":
        r"""pc_work_time_avg(ldpc_dec_sptr self) -> float"""
        return _a3sat_swig.ldpc_dec_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self) -> "float":
        r"""pc_work_time_var(ldpc_dec_sptr self) -> float"""
        return _a3sat_swig.ldpc_dec_sptr_pc_work_time_var(self)

    def pc_work_time_total(self) -> "float":
        r"""pc_work_time_total(ldpc_dec_sptr self) -> float"""
        return _a3sat_swig.ldpc_dec_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self) -> "float":
        r"""pc_throughput_avg(ldpc_dec_sptr self) -> float"""
        return _a3sat_swig.ldpc_dec_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, mask: "std::vector< int,std::allocator< int > > const &") -> "void":
        r"""set_processor_affinity(ldpc_dec_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _a3sat_swig.ldpc_dec_sptr_set_processor_affinity(self, mask)

    def unset_processor_affinity(self) -> "void":
        r"""unset_processor_affinity(ldpc_dec_sptr self)"""
        return _a3sat_swig.ldpc_dec_sptr_unset_processor_affinity(self)

    def processor_affinity(self) -> "std::vector< int,std::allocator< int > >":
        r"""processor_affinity(ldpc_dec_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _a3sat_swig.ldpc_dec_sptr_processor_affinity(self)

    def active_thread_priority(self) -> "int":
        r"""active_thread_priority(ldpc_dec_sptr self) -> int"""
        return _a3sat_swig.ldpc_dec_sptr_active_thread_priority(self)

    def thread_priority(self) -> "int":
        r"""thread_priority(ldpc_dec_sptr self) -> int"""
        return _a3sat_swig.ldpc_dec_sptr_thread_priority(self)

    def set_thread_priority(self, priority: "int") -> "int":
        r"""set_thread_priority(ldpc_dec_sptr self, int priority) -> int"""
        return _a3sat_swig.ldpc_dec_sptr_set_thread_priority(self, priority)

    def name(self) -> "std::string":
        r"""name(ldpc_dec_sptr self) -> std::string"""
        return _a3sat_swig.ldpc_dec_sptr_name(self)

    def symbol_name(self) -> "std::string":
        r"""symbol_name(ldpc_dec_sptr self) -> std::string"""
        return _a3sat_swig.ldpc_dec_sptr_symbol_name(self)

    def input_signature(self) -> "gr::io_signature::sptr":
        r"""input_signature(ldpc_dec_sptr self) -> io_signature_sptr"""
        return _a3sat_swig.ldpc_dec_sptr_input_signature(self)

    def output_signature(self) -> "gr::io_signature::sptr":
        r"""output_signature(ldpc_dec_sptr self) -> io_signature_sptr"""
        return _a3sat_swig.ldpc_dec_sptr_output_signature(self)

    def unique_id(self) -> "long":
        r"""unique_id(ldpc_dec_sptr self) -> long"""
        return _a3sat_swig.ldpc_dec_sptr_unique_id(self)

    def to_basic_block(self) -> "gr::basic_block_sptr":
        r"""to_basic_block(ldpc_dec_sptr self) -> basic_block_sptr"""
        return _a3sat_swig.ldpc_dec_sptr_to_basic_block(self)

    def check_topology(self, ninputs: "int", noutputs: "int") -> "bool":
        r"""check_topology(ldpc_dec_sptr self, int ninputs, int noutputs) -> bool"""
        return _a3sat_swig.ldpc_dec_sptr_check_topology(self, ninputs, noutputs)

    def alias(self) -> "std::string":
        r"""alias(ldpc_dec_sptr self) -> std::string"""
        return _a3sat_swig.ldpc_dec_sptr_alias(self)

    def set_block_alias(self, name: "std::string") -> "void":
        r"""set_block_alias(ldpc_dec_sptr self, std::string name)"""
        return _a3sat_swig.ldpc_dec_sptr_set_block_alias(self, name)

    def _post(self, which_port: "swig_pmt_ptr", msg: "swig_pmt_ptr") -> "void":
        r"""_post(ldpc_dec_sptr self, swig_pmt_ptr which_port, swig_pmt_ptr msg)"""
        return _a3sat_swig.ldpc_dec_sptr__post(self, which_port, msg)

    def message_ports_in(self) -> "pmt::pmt_t":
        r"""message_ports_in(ldpc_dec_sptr self) -> swig_pmt_ptr"""
        return _a3sat_swig.ldpc_dec_sptr_message_ports_in(self)

    def message_ports_out(self) -> "pmt::pmt_t":
        r"""message_ports_out(ldpc_dec_sptr self) -> swig_pmt_ptr"""
        return _a3sat_swig.ldpc_dec_sptr_message_ports_out(self)

    def message_subscribers(self, which_port: "swig_pmt_ptr") -> "pmt::pmt_t":
        r"""message_subscribers(ldpc_dec_sptr self, swig_pmt_ptr which_port) -> swig_pmt_ptr"""
        return _a3sat_swig.ldpc_dec_sptr_message_subscribers(self, which_port)

# Register ldpc_dec_sptr in _a3sat_swig:
_a3sat_swig.ldpc_dec_sptr_swigregister(ldpc_dec_sptr)


ldpc_dec_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ldpc_dec = ldpc_dec.make;

class bch_enc(object):
    r"""
    BCH Encoder based on CCSDS 230.1-G-2.

    Constructor Specific Documentation:


    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def make() -> "gr::a3sat::bch_enc::sptr":
        r"""
        make() -> bch_enc_sptr
        BCH Encoder based on CCSDS 230.1-G-2.

        Constructor Specific Documentation:


        """
        return _a3sat_swig.bch_enc_make()
    __swig_destroy__ = _a3sat_swig.delete_bch_enc

# Register bch_enc in _a3sat_swig:
_a3sat_swig.bch_enc_swigregister(bch_enc)

def bch_enc_make() -> "gr::a3sat::bch_enc::sptr":
    r"""
    bch_enc_make() -> bch_enc_sptr
    BCH Encoder based on CCSDS 230.1-G-2.

    Constructor Specific Documentation:


    """
    return _a3sat_swig.bch_enc_make()

class bch_enc_sptr(object):
    r"""Proxy of C++ boost::shared_ptr< gr::a3sat::bch_enc > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(bch_enc_sptr self) -> bch_enc_sptr
        __init__(bch_enc_sptr self, bch_enc p) -> bch_enc_sptr
        """
        _a3sat_swig.bch_enc_sptr_swiginit(self, _a3sat_swig.new_bch_enc_sptr(*args))

    def __deref__(self) -> "gr::a3sat::bch_enc *":
        r"""__deref__(bch_enc_sptr self) -> bch_enc"""
        return _a3sat_swig.bch_enc_sptr___deref__(self)
    __swig_destroy__ = _a3sat_swig.delete_bch_enc_sptr

    def make(self) -> "gr::a3sat::bch_enc::sptr":
        r"""
        make(bch_enc_sptr self) -> bch_enc_sptr
        BCH Encoder based on CCSDS 230.1-G-2.

        Constructor Specific Documentation:


        """
        return _a3sat_swig.bch_enc_sptr_make(self)

    def history(self) -> "unsigned int":
        r"""history(bch_enc_sptr self) -> unsigned int"""
        return _a3sat_swig.bch_enc_sptr_history(self)

    def declare_sample_delay(self, *args) -> "void":
        r"""
        declare_sample_delay(bch_enc_sptr self, int which, int delay)
        declare_sample_delay(bch_enc_sptr self, unsigned int delay)
        """
        return _a3sat_swig.bch_enc_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, which: "int") -> "unsigned int":
        r"""sample_delay(bch_enc_sptr self, int which) -> unsigned int"""
        return _a3sat_swig.bch_enc_sptr_sample_delay(self, which)

    def set_output_multiple(self, multiple: "int") -> "void":
        r"""set_output_multiple(bch_enc_sptr self, int multiple)"""
        return _a3sat_swig.bch_enc_sptr_set_output_multiple(self, multiple)

    def output_multiple(self) -> "int":
        r"""output_multiple(bch_enc_sptr self) -> int"""
        return _a3sat_swig.bch_enc_sptr_output_multiple(self)

    def relative_rate(self) -> "double":
        r"""relative_rate(bch_enc_sptr self) -> double"""
        return _a3sat_swig.bch_enc_sptr_relative_rate(self)

    def relative_rate_i(self) -> "uint64_t":
        r"""relative_rate_i(bch_enc_sptr self) -> uint64_t"""
        return _a3sat_swig.bch_enc_sptr_relative_rate_i(self)

    def relative_rate_d(self) -> "uint64_t":
        r"""relative_rate_d(bch_enc_sptr self) -> uint64_t"""
        return _a3sat_swig.bch_enc_sptr_relative_rate_d(self)

    def start(self) -> "bool":
        r"""start(bch_enc_sptr self) -> bool"""
        return _a3sat_swig.bch_enc_sptr_start(self)

    def stop(self) -> "bool":
        r"""stop(bch_enc_sptr self) -> bool"""
        return _a3sat_swig.bch_enc_sptr_stop(self)

    def nitems_read(self, which_input: "unsigned int") -> "uint64_t":
        r"""nitems_read(bch_enc_sptr self, unsigned int which_input) -> uint64_t"""
        return _a3sat_swig.bch_enc_sptr_nitems_read(self, which_input)

    def nitems_written(self, which_output: "unsigned int") -> "uint64_t":
        r"""nitems_written(bch_enc_sptr self, unsigned int which_output) -> uint64_t"""
        return _a3sat_swig.bch_enc_sptr_nitems_written(self, which_output)

    def set_log_level(self, level: "std::string") -> "void":
        r"""set_log_level(bch_enc_sptr self, std::string level)"""
        return _a3sat_swig.bch_enc_sptr_set_log_level(self, level)

    def log_level(self) -> "std::string":
        r"""log_level(bch_enc_sptr self) -> std::string"""
        return _a3sat_swig.bch_enc_sptr_log_level(self)

    def max_noutput_items(self) -> "int":
        r"""max_noutput_items(bch_enc_sptr self) -> int"""
        return _a3sat_swig.bch_enc_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, m: "int") -> "void":
        r"""set_max_noutput_items(bch_enc_sptr self, int m)"""
        return _a3sat_swig.bch_enc_sptr_set_max_noutput_items(self, m)

    def unset_max_noutput_items(self) -> "void":
        r"""unset_max_noutput_items(bch_enc_sptr self)"""
        return _a3sat_swig.bch_enc_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self) -> "bool":
        r"""is_set_max_noutput_items(bch_enc_sptr self) -> bool"""
        return _a3sat_swig.bch_enc_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, m: "int") -> "void":
        r"""set_min_noutput_items(bch_enc_sptr self, int m)"""
        return _a3sat_swig.bch_enc_sptr_set_min_noutput_items(self, m)

    def min_noutput_items(self) -> "int":
        r"""min_noutput_items(bch_enc_sptr self) -> int"""
        return _a3sat_swig.bch_enc_sptr_min_noutput_items(self)

    def max_output_buffer(self, i: "int") -> "long":
        r"""max_output_buffer(bch_enc_sptr self, int i) -> long"""
        return _a3sat_swig.bch_enc_sptr_max_output_buffer(self, i)

    def set_max_output_buffer(self, *args) -> "void":
        r"""
        set_max_output_buffer(bch_enc_sptr self, long max_output_buffer)
        set_max_output_buffer(bch_enc_sptr self, int port, long max_output_buffer)
        """
        return _a3sat_swig.bch_enc_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, i: "int") -> "long":
        r"""min_output_buffer(bch_enc_sptr self, int i) -> long"""
        return _a3sat_swig.bch_enc_sptr_min_output_buffer(self, i)

    def set_min_output_buffer(self, *args) -> "void":
        r"""
        set_min_output_buffer(bch_enc_sptr self, long min_output_buffer)
        set_min_output_buffer(bch_enc_sptr self, int port, long min_output_buffer)
        """
        return _a3sat_swig.bch_enc_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self) -> "float":
        r"""pc_noutput_items(bch_enc_sptr self) -> float"""
        return _a3sat_swig.bch_enc_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self) -> "float":
        r"""pc_noutput_items_avg(bch_enc_sptr self) -> float"""
        return _a3sat_swig.bch_enc_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self) -> "float":
        r"""pc_noutput_items_var(bch_enc_sptr self) -> float"""
        return _a3sat_swig.bch_enc_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self) -> "float":
        r"""pc_nproduced(bch_enc_sptr self) -> float"""
        return _a3sat_swig.bch_enc_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self) -> "float":
        r"""pc_nproduced_avg(bch_enc_sptr self) -> float"""
        return _a3sat_swig.bch_enc_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self) -> "float":
        r"""pc_nproduced_var(bch_enc_sptr self) -> float"""
        return _a3sat_swig.bch_enc_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full(bch_enc_sptr self, int which) -> float
        pc_input_buffers_full(bch_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.bch_enc_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full_avg(bch_enc_sptr self, int which) -> float
        pc_input_buffers_full_avg(bch_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.bch_enc_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full_var(bch_enc_sptr self, int which) -> float
        pc_input_buffers_full_var(bch_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.bch_enc_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full(bch_enc_sptr self, int which) -> float
        pc_output_buffers_full(bch_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.bch_enc_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full_avg(bch_enc_sptr self, int which) -> float
        pc_output_buffers_full_avg(bch_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.bch_enc_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full_var(bch_enc_sptr self, int which) -> float
        pc_output_buffers_full_var(bch_enc_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.bch_enc_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self) -> "float":
        r"""pc_work_time(bch_enc_sptr self) -> float"""
        return _a3sat_swig.bch_enc_sptr_pc_work_time(self)

    def pc_work_time_avg(self) -> "float":
        r"""pc_work_time_avg(bch_enc_sptr self) -> float"""
        return _a3sat_swig.bch_enc_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self) -> "float":
        r"""pc_work_time_var(bch_enc_sptr self) -> float"""
        return _a3sat_swig.bch_enc_sptr_pc_work_time_var(self)

    def pc_work_time_total(self) -> "float":
        r"""pc_work_time_total(bch_enc_sptr self) -> float"""
        return _a3sat_swig.bch_enc_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self) -> "float":
        r"""pc_throughput_avg(bch_enc_sptr self) -> float"""
        return _a3sat_swig.bch_enc_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, mask: "std::vector< int,std::allocator< int > > const &") -> "void":
        r"""set_processor_affinity(bch_enc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _a3sat_swig.bch_enc_sptr_set_processor_affinity(self, mask)

    def unset_processor_affinity(self) -> "void":
        r"""unset_processor_affinity(bch_enc_sptr self)"""
        return _a3sat_swig.bch_enc_sptr_unset_processor_affinity(self)

    def processor_affinity(self) -> "std::vector< int,std::allocator< int > >":
        r"""processor_affinity(bch_enc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _a3sat_swig.bch_enc_sptr_processor_affinity(self)

    def active_thread_priority(self) -> "int":
        r"""active_thread_priority(bch_enc_sptr self) -> int"""
        return _a3sat_swig.bch_enc_sptr_active_thread_priority(self)

    def thread_priority(self) -> "int":
        r"""thread_priority(bch_enc_sptr self) -> int"""
        return _a3sat_swig.bch_enc_sptr_thread_priority(self)

    def set_thread_priority(self, priority: "int") -> "int":
        r"""set_thread_priority(bch_enc_sptr self, int priority) -> int"""
        return _a3sat_swig.bch_enc_sptr_set_thread_priority(self, priority)

    def name(self) -> "std::string":
        r"""name(bch_enc_sptr self) -> std::string"""
        return _a3sat_swig.bch_enc_sptr_name(self)

    def symbol_name(self) -> "std::string":
        r"""symbol_name(bch_enc_sptr self) -> std::string"""
        return _a3sat_swig.bch_enc_sptr_symbol_name(self)

    def input_signature(self) -> "gr::io_signature::sptr":
        r"""input_signature(bch_enc_sptr self) -> io_signature_sptr"""
        return _a3sat_swig.bch_enc_sptr_input_signature(self)

    def output_signature(self) -> "gr::io_signature::sptr":
        r"""output_signature(bch_enc_sptr self) -> io_signature_sptr"""
        return _a3sat_swig.bch_enc_sptr_output_signature(self)

    def unique_id(self) -> "long":
        r"""unique_id(bch_enc_sptr self) -> long"""
        return _a3sat_swig.bch_enc_sptr_unique_id(self)

    def to_basic_block(self) -> "gr::basic_block_sptr":
        r"""to_basic_block(bch_enc_sptr self) -> basic_block_sptr"""
        return _a3sat_swig.bch_enc_sptr_to_basic_block(self)

    def check_topology(self, ninputs: "int", noutputs: "int") -> "bool":
        r"""check_topology(bch_enc_sptr self, int ninputs, int noutputs) -> bool"""
        return _a3sat_swig.bch_enc_sptr_check_topology(self, ninputs, noutputs)

    def alias(self) -> "std::string":
        r"""alias(bch_enc_sptr self) -> std::string"""
        return _a3sat_swig.bch_enc_sptr_alias(self)

    def set_block_alias(self, name: "std::string") -> "void":
        r"""set_block_alias(bch_enc_sptr self, std::string name)"""
        return _a3sat_swig.bch_enc_sptr_set_block_alias(self, name)

    def _post(self, which_port: "swig_pmt_ptr", msg: "swig_pmt_ptr") -> "void":
        r"""_post(bch_enc_sptr self, swig_pmt_ptr which_port, swig_pmt_ptr msg)"""
        return _a3sat_swig.bch_enc_sptr__post(self, which_port, msg)

    def message_ports_in(self) -> "pmt::pmt_t":
        r"""message_ports_in(bch_enc_sptr self) -> swig_pmt_ptr"""
        return _a3sat_swig.bch_enc_sptr_message_ports_in(self)

    def message_ports_out(self) -> "pmt::pmt_t":
        r"""message_ports_out(bch_enc_sptr self) -> swig_pmt_ptr"""
        return _a3sat_swig.bch_enc_sptr_message_ports_out(self)

    def message_subscribers(self, which_port: "swig_pmt_ptr") -> "pmt::pmt_t":
        r"""message_subscribers(bch_enc_sptr self, swig_pmt_ptr which_port) -> swig_pmt_ptr"""
        return _a3sat_swig.bch_enc_sptr_message_subscribers(self, which_port)

# Register bch_enc_sptr in _a3sat_swig:
_a3sat_swig.bch_enc_sptr_swigregister(bch_enc_sptr)


bch_enc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
bch_enc = bch_enc.make;

class bch_dec(object):
    r"""
    BCH Decoder based on CCSDS 230.1-G-2.

    Constructor Specific Documentation:


    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def make() -> "gr::a3sat::bch_dec::sptr":
        r"""
        make() -> bch_dec_sptr
        BCH Decoder based on CCSDS 230.1-G-2.

        Constructor Specific Documentation:


        """
        return _a3sat_swig.bch_dec_make()
    __swig_destroy__ = _a3sat_swig.delete_bch_dec

# Register bch_dec in _a3sat_swig:
_a3sat_swig.bch_dec_swigregister(bch_dec)

def bch_dec_make() -> "gr::a3sat::bch_dec::sptr":
    r"""
    bch_dec_make() -> bch_dec_sptr
    BCH Decoder based on CCSDS 230.1-G-2.

    Constructor Specific Documentation:


    """
    return _a3sat_swig.bch_dec_make()

class bch_dec_sptr(object):
    r"""Proxy of C++ boost::shared_ptr< gr::a3sat::bch_dec > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(bch_dec_sptr self) -> bch_dec_sptr
        __init__(bch_dec_sptr self, bch_dec p) -> bch_dec_sptr
        """
        _a3sat_swig.bch_dec_sptr_swiginit(self, _a3sat_swig.new_bch_dec_sptr(*args))

    def __deref__(self) -> "gr::a3sat::bch_dec *":
        r"""__deref__(bch_dec_sptr self) -> bch_dec"""
        return _a3sat_swig.bch_dec_sptr___deref__(self)
    __swig_destroy__ = _a3sat_swig.delete_bch_dec_sptr

    def make(self) -> "gr::a3sat::bch_dec::sptr":
        r"""
        make(bch_dec_sptr self) -> bch_dec_sptr
        BCH Decoder based on CCSDS 230.1-G-2.

        Constructor Specific Documentation:


        """
        return _a3sat_swig.bch_dec_sptr_make(self)

    def history(self) -> "unsigned int":
        r"""history(bch_dec_sptr self) -> unsigned int"""
        return _a3sat_swig.bch_dec_sptr_history(self)

    def declare_sample_delay(self, *args) -> "void":
        r"""
        declare_sample_delay(bch_dec_sptr self, int which, int delay)
        declare_sample_delay(bch_dec_sptr self, unsigned int delay)
        """
        return _a3sat_swig.bch_dec_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, which: "int") -> "unsigned int":
        r"""sample_delay(bch_dec_sptr self, int which) -> unsigned int"""
        return _a3sat_swig.bch_dec_sptr_sample_delay(self, which)

    def set_output_multiple(self, multiple: "int") -> "void":
        r"""set_output_multiple(bch_dec_sptr self, int multiple)"""
        return _a3sat_swig.bch_dec_sptr_set_output_multiple(self, multiple)

    def output_multiple(self) -> "int":
        r"""output_multiple(bch_dec_sptr self) -> int"""
        return _a3sat_swig.bch_dec_sptr_output_multiple(self)

    def relative_rate(self) -> "double":
        r"""relative_rate(bch_dec_sptr self) -> double"""
        return _a3sat_swig.bch_dec_sptr_relative_rate(self)

    def relative_rate_i(self) -> "uint64_t":
        r"""relative_rate_i(bch_dec_sptr self) -> uint64_t"""
        return _a3sat_swig.bch_dec_sptr_relative_rate_i(self)

    def relative_rate_d(self) -> "uint64_t":
        r"""relative_rate_d(bch_dec_sptr self) -> uint64_t"""
        return _a3sat_swig.bch_dec_sptr_relative_rate_d(self)

    def start(self) -> "bool":
        r"""start(bch_dec_sptr self) -> bool"""
        return _a3sat_swig.bch_dec_sptr_start(self)

    def stop(self) -> "bool":
        r"""stop(bch_dec_sptr self) -> bool"""
        return _a3sat_swig.bch_dec_sptr_stop(self)

    def nitems_read(self, which_input: "unsigned int") -> "uint64_t":
        r"""nitems_read(bch_dec_sptr self, unsigned int which_input) -> uint64_t"""
        return _a3sat_swig.bch_dec_sptr_nitems_read(self, which_input)

    def nitems_written(self, which_output: "unsigned int") -> "uint64_t":
        r"""nitems_written(bch_dec_sptr self, unsigned int which_output) -> uint64_t"""
        return _a3sat_swig.bch_dec_sptr_nitems_written(self, which_output)

    def set_log_level(self, level: "std::string") -> "void":
        r"""set_log_level(bch_dec_sptr self, std::string level)"""
        return _a3sat_swig.bch_dec_sptr_set_log_level(self, level)

    def log_level(self) -> "std::string":
        r"""log_level(bch_dec_sptr self) -> std::string"""
        return _a3sat_swig.bch_dec_sptr_log_level(self)

    def max_noutput_items(self) -> "int":
        r"""max_noutput_items(bch_dec_sptr self) -> int"""
        return _a3sat_swig.bch_dec_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, m: "int") -> "void":
        r"""set_max_noutput_items(bch_dec_sptr self, int m)"""
        return _a3sat_swig.bch_dec_sptr_set_max_noutput_items(self, m)

    def unset_max_noutput_items(self) -> "void":
        r"""unset_max_noutput_items(bch_dec_sptr self)"""
        return _a3sat_swig.bch_dec_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self) -> "bool":
        r"""is_set_max_noutput_items(bch_dec_sptr self) -> bool"""
        return _a3sat_swig.bch_dec_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, m: "int") -> "void":
        r"""set_min_noutput_items(bch_dec_sptr self, int m)"""
        return _a3sat_swig.bch_dec_sptr_set_min_noutput_items(self, m)

    def min_noutput_items(self) -> "int":
        r"""min_noutput_items(bch_dec_sptr self) -> int"""
        return _a3sat_swig.bch_dec_sptr_min_noutput_items(self)

    def max_output_buffer(self, i: "int") -> "long":
        r"""max_output_buffer(bch_dec_sptr self, int i) -> long"""
        return _a3sat_swig.bch_dec_sptr_max_output_buffer(self, i)

    def set_max_output_buffer(self, *args) -> "void":
        r"""
        set_max_output_buffer(bch_dec_sptr self, long max_output_buffer)
        set_max_output_buffer(bch_dec_sptr self, int port, long max_output_buffer)
        """
        return _a3sat_swig.bch_dec_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, i: "int") -> "long":
        r"""min_output_buffer(bch_dec_sptr self, int i) -> long"""
        return _a3sat_swig.bch_dec_sptr_min_output_buffer(self, i)

    def set_min_output_buffer(self, *args) -> "void":
        r"""
        set_min_output_buffer(bch_dec_sptr self, long min_output_buffer)
        set_min_output_buffer(bch_dec_sptr self, int port, long min_output_buffer)
        """
        return _a3sat_swig.bch_dec_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self) -> "float":
        r"""pc_noutput_items(bch_dec_sptr self) -> float"""
        return _a3sat_swig.bch_dec_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self) -> "float":
        r"""pc_noutput_items_avg(bch_dec_sptr self) -> float"""
        return _a3sat_swig.bch_dec_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self) -> "float":
        r"""pc_noutput_items_var(bch_dec_sptr self) -> float"""
        return _a3sat_swig.bch_dec_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self) -> "float":
        r"""pc_nproduced(bch_dec_sptr self) -> float"""
        return _a3sat_swig.bch_dec_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self) -> "float":
        r"""pc_nproduced_avg(bch_dec_sptr self) -> float"""
        return _a3sat_swig.bch_dec_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self) -> "float":
        r"""pc_nproduced_var(bch_dec_sptr self) -> float"""
        return _a3sat_swig.bch_dec_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full(bch_dec_sptr self, int which) -> float
        pc_input_buffers_full(bch_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.bch_dec_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full_avg(bch_dec_sptr self, int which) -> float
        pc_input_buffers_full_avg(bch_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.bch_dec_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_input_buffers_full_var(bch_dec_sptr self, int which) -> float
        pc_input_buffers_full_var(bch_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.bch_dec_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full(bch_dec_sptr self, int which) -> float
        pc_output_buffers_full(bch_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.bch_dec_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full_avg(bch_dec_sptr self, int which) -> float
        pc_output_buffers_full_avg(bch_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.bch_dec_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args) -> "std::vector< float,std::allocator< float > >":
        r"""
        pc_output_buffers_full_var(bch_dec_sptr self, int which) -> float
        pc_output_buffers_full_var(bch_dec_sptr self) -> pmt_vector_float
        """
        return _a3sat_swig.bch_dec_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self) -> "float":
        r"""pc_work_time(bch_dec_sptr self) -> float"""
        return _a3sat_swig.bch_dec_sptr_pc_work_time(self)

    def pc_work_time_avg(self) -> "float":
        r"""pc_work_time_avg(bch_dec_sptr self) -> float"""
        return _a3sat_swig.bch_dec_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self) -> "float":
        r"""pc_work_time_var(bch_dec_sptr self) -> float"""
        return _a3sat_swig.bch_dec_sptr_pc_work_time_var(self)

    def pc_work_time_total(self) -> "float":
        r"""pc_work_time_total(bch_dec_sptr self) -> float"""
        return _a3sat_swig.bch_dec_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self) -> "float":
        r"""pc_throughput_avg(bch_dec_sptr self) -> float"""
        return _a3sat_swig.bch_dec_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, mask: "std::vector< int,std::allocator< int > > const &") -> "void":
        r"""set_processor_affinity(bch_dec_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _a3sat_swig.bch_dec_sptr_set_processor_affinity(self, mask)

    def unset_processor_affinity(self) -> "void":
        r"""unset_processor_affinity(bch_dec_sptr self)"""
        return _a3sat_swig.bch_dec_sptr_unset_processor_affinity(self)

    def processor_affinity(self) -> "std::vector< int,std::allocator< int > >":
        r"""processor_affinity(bch_dec_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _a3sat_swig.bch_dec_sptr_processor_affinity(self)

    def active_thread_priority(self) -> "int":
        r"""active_thread_priority(bch_dec_sptr self) -> int"""
        return _a3sat_swig.bch_dec_sptr_active_thread_priority(self)

    def thread_priority(self) -> "int":
        r"""thread_priority(bch_dec_sptr self) -> int"""
        return _a3sat_swig.bch_dec_sptr_thread_priority(self)

    def set_thread_priority(self, priority: "int") -> "int":
        r"""set_thread_priority(bch_dec_sptr self, int priority) -> int"""
        return _a3sat_swig.bch_dec_sptr_set_thread_priority(self, priority)

    def name(self) -> "std::string":
        r"""name(bch_dec_sptr self) -> std::string"""
        return _a3sat_swig.bch_dec_sptr_name(self)

    def symbol_name(self) -> "std::string":
        r"""symbol_name(bch_dec_sptr self) -> std::string"""
        return _a3sat_swig.bch_dec_sptr_symbol_name(self)

    def input_signature(self) -> "gr::io_signature::sptr":
        r"""input_signature(bch_dec_sptr self) -> io_signature_sptr"""
        return _a3sat_swig.bch_dec_sptr_input_signature(self)

    def output_signature(self) -> "gr::io_signature::sptr":
        r"""output_signature(bch_dec_sptr self) -> io_signature_sptr"""
        return _a3sat_swig.bch_dec_sptr_output_signature(self)

    def unique_id(self) -> "long":
        r"""unique_id(bch_dec_sptr self) -> long"""
        return _a3sat_swig.bch_dec_sptr_unique_id(self)

    def to_basic_block(self) -> "gr::basic_block_sptr":
        r"""to_basic_block(bch_dec_sptr self) -> basic_block_sptr"""
        return _a3sat_swig.bch_dec_sptr_to_basic_block(self)

    def check_topology(self, ninputs: "int", noutputs: "int") -> "bool":
        r"""check_topology(bch_dec_sptr self, int ninputs, int noutputs) -> bool"""
        return _a3sat_swig.bch_dec_sptr_check_topology(self, ninputs, noutputs)

    def alias(self) -> "std::string":
        r"""alias(bch_dec_sptr self) -> std::string"""
        return _a3sat_swig.bch_dec_sptr_alias(self)

    def set_block_alias(self, name: "std::string") -> "void":
        r"""set_block_alias(bch_dec_sptr self, std::string name)"""
        return _a3sat_swig.bch_dec_sptr_set_block_alias(self, name)

    def _post(self, which_port: "swig_pmt_ptr", msg: "swig_pmt_ptr") -> "void":
        r"""_post(bch_dec_sptr self, swig_pmt_ptr which_port, swig_pmt_ptr msg)"""
        return _a3sat_swig.bch_dec_sptr__post(self, which_port, msg)

    def message_ports_in(self) -> "pmt::pmt_t":
        r"""message_ports_in(bch_dec_sptr self) -> swig_pmt_ptr"""
        return _a3sat_swig.bch_dec_sptr_message_ports_in(self)

    def message_ports_out(self) -> "pmt::pmt_t":
        r"""message_ports_out(bch_dec_sptr self) -> swig_pmt_ptr"""
        return _a3sat_swig.bch_dec_sptr_message_ports_out(self)

    def message_subscribers(self, which_port: "swig_pmt_ptr") -> "pmt::pmt_t":
        r"""message_subscribers(bch_dec_sptr self, swig_pmt_ptr which_port) -> swig_pmt_ptr"""
        return _a3sat_swig.bch_dec_sptr_message_subscribers(self, which_port)

# Register bch_dec_sptr in _a3sat_swig:
_a3sat_swig.bch_dec_sptr_swigregister(bch_dec_sptr)


bch_dec_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
bch_dec = bch_dec.make;



